---
kubernetes_version: 1.10.8

s3_sync_bucket: kubelinidev

#used as a s3 folder so you can support multiple clusters per s3 bucket.
#Also used as cluster/user/context name for generated admin kubeconfig
cluster_id: kubelini13

cluster_ip_range: 10.32.0.0/16
cluster_ip_range_first_ip: 10.32.0.1 #needed for certificate
cluster_dns_address: 10.32.0.10

#this setting controls the ip range for pods. 
#Usually this should line up with the network_allocation_cidr variable defined bellow.
cluster_cidr: 10.200.0.0/16
cluster_domain: cluster.local

#Set this if you have a LB in front of your controllers!
#If not, use the first master node in your inventory
#It can be either an ip address or a hostname, but it must be resolvable for all nodes in the cluster
#You need to configre this BEFORE you run prep_cluster, as the address/ip will be injected into certificates
kubernetes_cluster_address: 10.245.22.231

#Allow Kubernetes worker nodes to swap (can be enabled for lab scenarios)
allow_swap: no

kubelet_serialize_image_pulls: 'true'

#Enabling this flag might have some consequenses, see the description in kubelini-worker-kubelet/defaults/main.yml
#If you enable the kubelini_addons_install_metrics_server flag, this setting must be set to tru
kubelet_enable_authentication: yes

#If set to true, this creates the apiserver inside a kublet running on the master nodes.
#This more closely resembles "standard" kubernetes setups, and it allows the apiserver
#to use services without an ingress, such as Admission Controller Webhooks.
#I'll move more of the "controller" (aka master) roles into running-as-pods later.
#You can transition on-the-fly from systemd-based apiserver to pod-based but not the other way around
apiserver_run_in_pod: yes

#Enable cloud integration. You should use set the kubelet_use_ec2_hostname to true if using this.
apiserver_cloud_provider: aws
kubelet_cloud_provider: aws
aws_region: eu-west-1
kubelet_use_ec2_hostname: yes #This var trickles down to several included roles.


#Add oidc integration, see the defaults in the kubelini-clustercontroller role for more info
apiserver_oidc_enable: no

#If apiserver_oidc_enable is enabled, set these:
apiserver_oidc_issuer_url: 
apiserver_oidc_client_id: 
apiserver_oidc_username_claim: email
apiserver_oidc_groups_claim: groups


#Don't change these networking variables after your control plane nodes (masters) are deployed.
networking_stack: flannel # set to either weavenet or flannel. 
network_allocation_cidr: 10.200.0.0/16 #used by flannel or weavenet to configure the pod ip range

#Download the admin kubeconfig file on all workers (path will be /opt/kubelini/admin_kubeconfig/admin.kubeconfig)
download_admin_kubeconfig: yes

#Install the kube-metrics server addon
kubelini_addons_install_metrics_server: yes

#if you set this var, fill it with users that will be added to "static" users:
additional_kubernetes_static_users:
  - user: deploy
    password: whatUp
    uid: '180' #uid needs to be unique across all static users
    group: 'system:masters'
  - user: admin
    password: DoIt
    uid: '173' #uid needs to be unique across all static users
    group: 'system:masters'
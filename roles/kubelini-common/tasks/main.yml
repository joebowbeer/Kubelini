- block:
  - name: change hostname
    become: true
    hostname:
      name: "{{ inventory_hostname | lower }}"
    register: changed_hostname
  
  - name: add hostname to /etc/hosts
    become: true
    lineinfile:
      path: /etc/hosts
      line: "127.0.0.1 {{ inventory_hostname | lower }}"
  
  - name: Check if reboot is required
    stat:
      path: /var/run/reboot-required
    register: reboot_required
  when: do_rename_host_if_needed

- block:
  - name: reboot
    shell: sleep 2 && shutdown -r now "Ansible reboot"
    async: 1
    poll: 0
    ignore_errors: true
    become: yes
    when: "{{ allow_reboot | default('False') }}"

  - name: wait for server to come back
    local_action: wait_for
    become: false
    args:
      host: "{{ ansible_host }}"
      port: 22
      state: started
      delay: 10
      timeout: 300
  when: do_rename_host_if_needed and (reboot_required.stat.exists or changed_hostname.changed)

- name: install apt packages
  apt:
    name: "{{ item }}"
    update_cache: yes
  with_items:
  - python-pip
  - socat #needed also
  - util-linux #for nsenter
  - conntrack

- name: Install aws cli
  pip:
    name: "{{ item }}"
  with_items:
  - awscli
  - boto3
  - boto
  - requests

- name: configure work folder
  file:
    path: /opt/kubelini
    state: directory

- name: Download cfssl tools
  get_url:
    url: "{{ cfssl_url }}"
    dest: /usr/local/bin/cfssl

- name: Download cfssl tools
  get_url:
    url: "{{ cfssl_json_url }}"
    dest: /usr/local/bin/cfssljson

- name: chmod downloaded files
  file:
    dest: "/usr/local/bin/{{ item }}"
    mode: a+x
  with_items:
  - cfssljson
  - cfssl

- name: Set url root
  set_fact:
    k8s_url_root: "https://storage.googleapis.com/kubernetes-release/release/v{{ kubernetes_version }}/bin/linux/amd64"

- name: Download kubernetes binaries
  get_url:
    url: "{{ item }}"
    dest: /opt/kubelini
  with_items:
  - "{{ k8s_url_root }}/kube-apiserver"
  - "{{ k8s_url_root }}/kube-controller-manager"
  - "{{ k8s_url_root }}/kube-scheduler"
  - "{{ k8s_url_root }}/kubectl"
  - "{{ k8s_url_root }}/kubelet"
  - "{{ k8s_url_root }}/kube-proxy"

- name: copy files to bin
  copy:
    src: "{{ item }}"
    dest: /usr/bin/
    remote_src: yes
    mode: a+x
  with_items:
  - "/opt/kubelini/kube-apiserver"
  - "/opt/kubelini/kube-controller-manager"
  - "/opt/kubelini/kube-scheduler"
  - "/opt/kubelini/kubectl"
  - "/opt/kubelini/kubelet"
  - "/opt/kubelini/kube-proxy"


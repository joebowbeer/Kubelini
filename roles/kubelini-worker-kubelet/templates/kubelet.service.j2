[Unit]
Description=Kubernetes Kubelet
Documentation=https://github.com/GoogleCloudPlatform/kubernetes
After=docker.service
Requires=docker.service

[Service]
ExecStart=/usr/bin/kubelet \
{% if allow_swap %}
  --fail-swap-on=false \
{% endif %}
  --allow-privileged=true \
  --anonymous-auth=false \
  --client-ca-file=/var/lib/kubernetes/ca.pem \
{% if kubelet_cloud_provider %}
  --cloud-provider={{ kubelet_cloud_provider }} \
{% endif %}
  --cluster-dns={{ cluster_dns_address }} \
  --cluster-domain={{ cluster_domain }} \
  --container-runtime=docker \
  --network-plugin=cni \
{% if _internal_node_labels_list %}
  --node-labels={{ _internal_node_labels_list }} \
{% endif %}
{% if kubelet_enable_authentication %}
  --authentication-token-webhook \
{% endif %}
  --serialize-image-pulls={{ kubelet_serialize_image_pulls }} \
  --register-node=true \
  --tls-cert-file=/var/lib/kubernetes/{{ inventory_hostname }}.pem \
  --tls-private-key-file=/var/lib/kubernetes/{{ inventory_hostname }}-key.pem \
  --v=2 \
  --kubeconfig=/var/lib/kubelet/{{ inventory_hostname }}.kubeconfig \
  --image-gc-high-threshold={{ image_gc_high_threshold }} \
  --pod-manifest-path=/etc/kubernetes/manifests \
  --maximum-dead-containers-per-container={{ maximum_dead_containers_per_container }} \
  --hostname-override={{ inventory_hostname }}
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target
